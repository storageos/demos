# - name: install the latest version of wget
#   package:
#     name: wget
#     state: latest

# - name: Set up persistent etcd data directory
#   file:
#     path:  "{{ installation_dir }}"
#     state: directory
#     owner: root
#     group: root
#     mode:  0775

# - name:  Fetch new etcd
#   get_url:
#     url: https://github.com/etcd-io/etcd/releases/download/v{{ etcd_version }}/etcd-v{{ etcd_version }}-linux-amd64.tar.gz
#     dest: /tmp/

# - name: Unarchive new etcd
#   unarchive:
#     src: /tmp/etcd-v{{ etcd_version }}-linux-amd64.tar.gz 
#     dest: /tmp
#     remote_src: yes

# - name: Install new etcd
#   shell: |
#     cd /tmp/etcd-v{{ etcd_version }}-linux-amd64
#     mv etcd /usr/local/sbin/etcd3
#     mv etcdctl /usr/local/sbin/etcdctl
#     chmod 755 /usr/local/sbin/etcd3 /usr/local/sbin/etcdctl

# - name: Put systemd service file
#   tags: systemd
#   template:
#     src: etcd3.service.j2
#     dest: /etc/systemd/system/etcd3.service
#     owner: root
#     group: root
#     mode: 0644

# - debug:
#     msg: members {{ members }}

# - debug:
#     msg: groups existing nodes {{ groups['existing_nodes'] }}

# - debug:
#     msg: inventory hostname {{ inventory_hostname }}

# # - debug:
# #     msg: host vars {{ hostvars }}

# - debug:
#     msg: host vars inventory host name {{ hostvars[inventory_hostname]['ip'] }}

# - debug:
#     msg: internal ip of old node {{ hostvars[ groups['existing_nodes'][0]]['ip'] }}

# - name: Add new member
#   shell: |
#     ETCDCTL_API=3 etcdctl member add etcd-{{ inventory_hostname }} --endpoints=http://{{ hostvars[ groups['existing_nodes'][0]]['ip'] }}:{{etcd_port_client}} --peer-urls=http://{{ hostvars[inventory_hostname]['ip'] }}:{{ etcd_port_peers }} --learner=true

# - name: Reload and start the services
#   shell: |
#     systemctl daemon-reload
#     systemctl enable etcd3.service
#     systemctl start  etcd3.service

- name: Promote new member
  shell: |
    LEARNER_MEMBER=$(ETCDCTL_API=3 etcdctl --endpoints=http://{{ hostvars[ groups['existing_nodes'][0]]['ip'] }}:{{etcd_port_client}} member list | grep true | cut -d ',' -f 1)
    ETCDCTL_API=3 etcdctl --endpoints=http://{{ hostvars[ groups['existing_nodes'][0]]['ip'] }}:{{etcd_port_client}} member promote $LEARNER_MEMBER

- name: Put example file, how to restore from backup
  template:
    src: etcd-restore-command.j2
    dest: /tmp/etcd-restore-example
    owner: root
    group: root
    mode: 0644
  tags: t

- name: Setup a defrag rule
  template:
    src: defrag-etcd.sh.j2
    dest: /usr/local/sbin/defrag-etcd
    owner: root
    group: root
    mode: 0755
